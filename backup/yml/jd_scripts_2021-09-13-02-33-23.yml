name: all-in-one
on:
  schedule:
    - cron: 5 */2 * * *
  watch:
    types: started
jobs:
  build:
    runs-on: Ubuntu-20.04  
    steps:
    - uses: actions/checkout@v2
    - name: Install build dependencies
      run: |
        sudo npm install -g typescript
        sudo apt-get install wget
        sudo apt install rename
    - name: down
      run: |
        echo "========= 开始清空脚本 ========="
        shopt -s extglob
        rm -rf !(docker|backup|icon|account.json|Loon|QuantumultX|README.md|jd_half_redrain.js|jd_super_redrain.js)
        shopt -u extglob
        echo "========= 开始下载小小的脚本及依赖 ========="
        git clone -b jd_scripts https://github.com/Aaron-lv/sync.git ./Aaron
        cp -f ./Aaron/jd_*.js ./
        cp -rf ./Aaron/utils ./
        rm -rf ./Aaron
        echo "========= 开始下载smiek2221的脚本 ========="
        git clone https://github.com/smiek2221/scripts.git ./smiek2221
        rm -r ./smiek2221/USER_AGENTS.js
        cp -f ./smiek2221/*_*.js ./
        rm -rf ./smiek2221
        echo "========= 开始下载passby的脚本 ========="
        git clone https://github.com/passerby-b/JDDJ.git ./JDDJ
        cp -f ./JDDJ/jddj_*.js ./
        rm -rf ./JDDJ
        echo "========= 开始下载curtinlv的脚本 ========="
        git clone https://github.com/curtinlv/JD-Script.git ./curtinlv
        find ./curtinlv/ -name "*py" -type f -exec cp {} ./ \;
        rm -rf ./curtinlv
        echo "========= 开始下载start的脚本 ========="
        git clone -b main https://github.com/star261/jd.git ./star
        cp -rf ./star/scripts/*_*.js ./
        rm -rf ./star
        echo "========= 开始下载airacg的脚本及依赖 ========="
        git clone https://github.com/airacg/jd_task.git ./airacg
        cp -r ./airacg/function ./
        cp -f ./airacg/*_*.js ./
        rm -rf ./airacg
        echo "========= 开始下载JDHelloWorld的脚本 ========="
        git clone https://github.com/JDHelloWorld/jd_scripts.git ./JDHelloWorld
        mv ./JDHelloWorld/githubAction.md ./githubAction.md
        echo "========= 开始复制依赖 ========="
        cp -f ./JDHelloWorld/package.json ./
        cp -f ./JDHelloWorld/sendNotify.js ./
        cp -f ./JDHelloWorld/jdCookie.js ./
        cp -f ./JDHelloWorld/*ShareCodes.js ./
        mv -f ./JDHelloWorld/jd_cfd_hb.ts ./backup/ts/
        #cp -f ./backup/js/shareCodesTool.js ./JDHelloWorld/tools/
        echo "========= 开始转换JDHelloWorld的ts脚本 ========="
        cd ./JDHelloWorld
        sudo npm install
        tsc *_*.ts
        cd ./utils
        tsc *.ts
        echo "========= 开始复制JDHelloWorld的脚本 ========="
        cd ../..
        mv -f ./JDHelloWorld/utils/*.ts ./backup/ts/
        cp -rf ./JDHelloWorld/utils ./
        rm -rf ./JDHelloWorld/jd_update.js
        cp -rf ./JDHelloWorld/backUp/* ./backup/js/
        cp -f ./JDHelloWorld/*_*.js ./
        cp -f ./JDHelloWorld/*_*.ts ./backup/ts/
        rm -rf ./JDHelloWorld
        echo "========= 开始下载单文件脚本 ========="
        wget -N https://github.com/yangtingxiao/QuantumultX/raw/master/scripts/jd/jd_lotteryMachine.js
        wget -N https://github.com/NobyDa/Script/raw/master/JD-DailyBonus/JD_DailyBonus.js
        wget -N https://github.com/jiulan/platypus/raw/main/scripts/jd_shop_sign.js
        wget -N https://github.com/Annyoo2021/scripts/raw/main/jd_dwapp.js
        echo "========= 开始更改前缀 ========="
        #for i in `ls | grep -e ^gua`; do mv -f $i `echo "jd_"$i`; done
        rename -f 's/^js_/jd_js/' *
        rename -f 's/^jd_fan/jd_wxFans/' *
        rename -f 's/^jx_/jd_jx/' *
        rename -f 's/^gua_/jd_gua/' *
        rename -f 's/^star_/jd_star/' *
        rename -f 's/^jddj/jd_dj/' *
        echo "========= 开始合并cron定时文件 ========="
        wget -N https://github.com/Annyoo2021/scripts/raw/main/docker/crontab_list.sh
        mv -f crontab_list.sh ./docker/crontab_list.sh
        cat ./docker/diy.sh >> ./docker/crontab_list.sh
        echo "========= 修改cron名称及临时屏蔽 ========="
        sed -i 's/sjzjd/guaMMdou/g' ./docker/crontab_list.sh
        sed -i 's/superBrand/productZ4Brand/g' ./docker/crontab_list.sh
        sed -i 's/jxqd/jxsign/g' ./docker/crontab_list.sh
        sed -i 's/jd_joy.js/jd_joy_new.js/g' ./docker/crontab_list.sh
        sed -i 's/zqfl/getUp/g' ./docker/crontab_list.sh
        sed -i '/jd_qqxing\|jd_work_validate\|jd_work_validate\|daily_egg\|jd_lsj\|jd_joy_run\|cfdtx\|jd_pigPet\|jd_joy_feedPets\|jd_joy_steal\|jd_joy_park_task\|jd_ddnc_farmpark\|jd_Elecsport\|jd_all_bean_change\|jd_try\|jd_live_redrain\|jd_price\|jd_unsubscriLive\|jd_speed.js\|necklace/d' ./docker/crontab_list.sh
        echo "========= 备份cron及yml文件 ========="
        log_time=$(date "+%Y-%m-%d-%H-%M-%S")
        diff ./docker/crontab_list.sh ./backup/cron/crontab_list.sh | tee ./backup/cron/env.diff
        if [ ! -s ./backup/cron/env.diff ]; then
            echo "定时文件没有变化...\n"
        elif [ -s ./backup/cron/env.diff ] ; then
            cp -f ./docker/crontab_list.sh ./backup/cron/crontab_list_$log_time.sh
        fi
        diff ./.github/workflows/jd_scripts.yml ./backup/yml/jd_scripts.yml | tee ./backup/yml/env.diff
        if [ ! -s ./backup/yml/env.diff ]; then
            echo -e "yml文件没有变化...\n"
        elif [ -s ./backup/yml/env.diff ] ; then
            cp -f ./.github/workflows/jd_scripts.yml ./backup/yml/jd_scripts_$log_time.yml
        fi
        echo "========= 删除对比缓存及复制文件下次对比 ========="
        rm -rf ./backup/yml/env.diff
        rm -rf ./backup/cron/env.diff
        cp -f ./.github/workflows/jd_scripts.yml ./backup/yml/jd_scripts.yml
        cp -f ./docker/crontab_list.sh ./backup/cron/crontab_list.sh
    - name: 'Commit Files'
      id: commit
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git diff --quiet && git diff --staged --quiet || git commit -am 'update'
    - name: Push Dust
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.PAT }}
        branch: master
